import{_ as t,c as o,o as n,a4 as r}from"./chunks/framework.CysPtqB9.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Frontend/CSS/basic.md","filePath":"Frontend/CSS/basic.md"}'),s={name:"Frontend/CSS/basic.md"},e=r("<ul><li><p><strong>选择器（Selectors）</strong>：选择器用于选择要应用样式的HTML元素。常见的选择器包括标签选择器（如 p）、类选择器（如 .class）、- ID选择器（如 #id）以及属性选择器（如 [attribute]）等。</p></li><li><p><strong>属性（Properties）</strong>：属性是CSS中用于定义样式的关键字。常见的属性包括 color（颜色）、font-size（字体大小）、background-color（背景颜色）、margin（外边距）、padding（内边距）等。</p></li><li><p><strong>值（Values）</strong>：属性需要与值一起使用，值定义了属性的具体样式。例如，color: red;中的 red 就是一个值。</p></li><li><p><strong>盒模型（Box Model）</strong>：在CSS中，每个HTML元素都被视为一个矩形框，该框由内容、内边距、边框和外边距组成。这被称为盒模型。</p></li><li><p><strong>布局（Layout）</strong>：CSS用于控制网页的布局，包括定位、浮动、弹性布局、网格布局等。这些属性和值允许您控制元素在页面上的位置和大小。</p></li><li><p><strong>层叠与继承（Cascading and Inheritance）</strong>：CSS中的“层叠”指的是多个样式规则应用到同一个元素时的优先级规则。而“继承”是指子元素继承父元素的某些样式，如文字颜色和字体大小等。</p></li><li><p><strong>媒体查询（Media Queries）</strong>：媒体查询允许您根据设备属性（如屏幕宽度、设备类型等）应用不同的样式。这对于响应式网页设计非常有用。</p></li><li><p><strong>动画与过渡（Animation and Transitions）</strong>：CSS允许您创建动画和过渡效果，使网页更加生动和吸引人。</p></li></ul>",1),i=[e];function a(l,c,p,d,_,S){return n(),o("div",null,i)}const m=t(s,[["render",a]]);export{u as __pageData,m as default};
